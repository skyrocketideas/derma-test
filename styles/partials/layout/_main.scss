@use "partials/abstracts/mixins";

/* page wrapper */
.wrapper {
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	/* gap: 1rem; */
}
.wrapper > * {
	grid-column: 1 / span 12;
}
.container-benefits {
	@include respond(tablet) {
		grid-column: 2 / 12;
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: var(--gap);
	}
}
.img-icon {
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
}
.img-icon > img {
	width: 200px;
}
.container-bg {
	background-color: var(--bg-container);
}
.container-hero {
	display: flex;
	flex-direction: column;
	height: 400px;
	align-items: center;
	justify-content: center;
	@include respond(tablet) {
		grid-column: 1 / 13;
		display: grid;
		grid-template-columns: repeat(2, 1fr);
	}
	&:first-of-type {
		background: var(--bg-hero);
		color: var(--base-color-lightest);
	}
}
.container-hero img {
	height: 100%;
	width: auto;
}
.container-hero-main {
	display: flex;
	flex-direction: column;
	height: 400px;
	align-items: center;
	justify-content: center;
	background-color: var(--bg-hero);
	color: var(--base-color-lightest);
	background-image: url("/static/img/hero-image.jpg");
	background-position: right;
	background-size: cover;
	position: relative;
	@include respond(tablet) {
		display: grid;
		grid-template-columns: repeat(12, 1fr);
		grid-column: 1 / 13;
	}
}
.container-img {
	overflow: hidden;
	display: flex;
	align-items: center;
	justify-content: center;
}
.container-logo {
	padding: 1rem;
	@include respond(tablet) {
		grid-column: 1 / 2;
	}
}
.hero-text {
	@include respond(tablet) {
		grid-column: 2 / 8;
	}
}
.logo-hero {
	width: 100px;
	height: auto;
	margin: 0 1rem;
}
.container-inner {
	padding: 2rem var(--padding);
}
.container-references {
	margin: var(--margin) 0;
	display: flex;
	padding: 1rem;
	align-items: center;
	gap: 1rem;
	@include respond(tablet) {
		grid-column: 2 / 12;
		display: grid;
		grid-template-columns: repeat(12, 1fr);
		gap: var(--gap);
	}
}
.container-tools {
	margin: var(--margin) 0;
	@include respond(tablet) {
		grid-column: 2 / 12;
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		h1 {
			grid-column: 1 / -1;
		}
	}
}
.container-video {
	margin: var(--margin) 0;
	display: flex;
	flex-direction: column;
	@include respond(tablet) {
		grid-column: 2 / 12;
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: var(--gap);
	}
}
.container-video > .container-inner {
	order: 1;
	@include respond(tablet) {
		order: -1;
	}
}
.container-video-cards {
	@include respond(tablet) {
		grid-column: 2 / 12;
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: var(--gap);
		& .video-header {
			grid-column: 1 / -1;
		}
	}
}
